buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net" }
        maven { url = "https://repo.spongepowered.org/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
    }
}

repositories {
  maven {
    name = "Progwml6 maven"
    url = "https://dvs1.progwml6.com/files/maven/"
  }
  maven {
    name = "ModMaven"
    url = "https://modmaven.k-4u.nl/"
  }
}

repositories {
    maven {
        url = "https://www.cursemaven.com"
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "eclipse"
apply plugin: "org.spongepowered.mixin"

version = "${mc_version}-${mod_version}"
group = "net.mrscauthd.beyond_earth"
archivesBaseName = "Beyond-Earth"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: "official", version: "${mc_version}"
    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            arg "-mixin.config=beyond_earth.mixin.json"

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            arg "-mixin.config=beyond_earth.mixin.json"

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url "https://maven.tterrag.com/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    //Mixin
    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
    }

    //JEI
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    //The One Probe
    compileOnly fg.deobf("curse.maven:the-one-probe-245211:${the_one_probe_version}")
    
    //Jade
    implementation fg.deobf("curse.maven:jade-324717:${jade_version}")

    //TConstruct
    compileOnly fg.deobf("slimeknights.mantle:Mantle:${mc_version}-${mantle_version}")
    compileOnly fg.deobf("slimeknights.tconstruct:TConstruct:${mc_version}-${tconstruct_version}")


    //Mekanism
    compileOnly fg.deobf("mekanism:Mekanism:${mc_version}-${mekanism_version}")
    // runtimeOnly fg.deobf("mekanism:Mekanism:${mc_version}-${mekanism_version}")
    compileOnly fg.deobf("mekanism:Mekanism:${mc_version}-${mekanism_version}:additions")
    compileOnly fg.deobf("mekanism:Mekanism:${mc_version}-${mekanism_version}:generators")
    compileOnly fg.deobf("mekanism:Mekanism:${mc_version}-${mekanism_version}:tools")
	
	// Create
	
    implementation fg.deobf("com.simibubi.create:Create:mc${create_version}")
    implementation fg.deobf("com.jozufozu.flywheel:Flywheel-Forge:${flywheel_version}")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
    add sourceSets.main, "beyond_earth.mixin-refmap.json"
}

jar.finalizedBy("reobfJar")

def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
def intoTargets = ["$rootDir/out/production/resources/", "$rootDir/out/production/${project.name}.main/", "$rootDir/bin/main/"]
def replaceProperties = [mod_version: mod_version, mc_version: mc_version, forge_version: forge_version, loader_version: loader_version]
processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }

    intoTargets.each { target ->
        if (file(target).exists()) {
            copy {
                from(sourceSets.main.resources) {
                    include resourceTargets
                    expand replaceProperties
                }
                into target
            }
        }
    }
}


jar {
    manifest {
        attributes([
                "Specification-Title": "beyond_earth",
                "Specification-Vendor": "MrScautHD",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"MrScautHD",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs" : "beyond_earth.mixin.json"
        ])
    }
}